package com.raven.form;

import com.raven.form.Form_1;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;

public class Form_3 extends javax.swing.JPanel {
    
    // Variables for connecting to DB
    private static final String username = "root";
    private static final String pswd = "7168thembid";
    private static final String databaseCon = "jdbc:mysql://localhost:3306/estate_agency";
    // Variable for connecting Driver
    private static final String driver = "com.mysql.cj.jdbc.Driver";
    
    Connection sqlConn = null;
    Statement stmt = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int q, i, id, deleteItem;
    
    public Form_3() {
        initComponents();
        //sp.setVerticalScrollBar(new ScrollBar());
    }
    
        public void upDateDB() {
        try {
            Class.forName(driver);
            sqlConn = DriverManager.getConnection(databaseCon,username,null);
            pst = sqlConn.prepareStatement("SELECT * FROM Client");
            
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)Form_1.table.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()) {
                Vector columnData = new Vector();
                
                for (i = 1; i <= q; i++){
                    columnData.add(rs.getShort("refNum"));
                    columnData.add(rs.getString("first_Name"));
                    columnData.add(rs.getString("last_Name"));
                    columnData.add(rs.getString("client_address"));
                    columnData.add(rs.getString("client_status"));
                }
                RecordTable.addRow(columnData);
            }
        }
        
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        property = new javax.swing.JPanel();
        sp = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        refNum = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PropHouseNo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        PropLocal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        PropPostal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PropType = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        rooms = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        PropStatus = new javax.swing.JComboBox<>();
        jbtnRegProperty = new javax.swing.JButton();
        client = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        clientHouseNo = new javax.swing.JTextField();
        clientLocality = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        clientPostal = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        clientStatus = new javax.swing.JComboBox<>();
        jbtnRegClient = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setAutoscrolls(true);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Register Property");
        jButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setMaximumSize(new java.awt.Dimension(420, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 390, 30));

        jButton2.setText("Register Client");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 390, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("REGISTRATION");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        sp.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(17, 153, 142));
        jLabel4.setText("CLIENT");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Reference Number");

        refNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refNumActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(17, 153, 142));
        jLabel7.setText("ADDRESS");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("House Number");

        PropHouseNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropHouseNoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Locality");

        PropLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropLocalActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Postal Address");

        PropPostal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropPostalActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(17, 153, 142));
        jLabel11.setText("TYPE OF PROPERTY");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Type");

        PropType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single Room", "Two Room", "Flat", "Bachelor Pad", "Studio Pad", "Two and Half", " " }));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Number of Rooms");

        rooms.setModel(new javax.swing.SpinnerNumberModel(1, 1, 65, 1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(17, 153, 142));
        jLabel14.setText("PROPERTY STATUS");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Status");

        PropStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "For Sale", "Under Offer", "For Rent", "Sold" }));

        jbtnRegProperty.setBackground(new java.awt.Color(17, 153, 142));
        jbtnRegProperty.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnRegProperty.setForeground(new java.awt.Color(255, 255, 255));
        jbtnRegProperty.setText("Register");
        jbtnRegProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRegPropertyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(PropType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(rooms, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel4)
                                .addComponent(jLabel11)
                                .addComponent(jLabel14)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(48, 48, 48)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(18, 18, 18)
                                            .addComponent(PropHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(11, 11, 11)
                                            .addComponent(jLabel15)
                                            .addGap(18, 18, 18)
                                            .addComponent(PropStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel9))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(PropLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(PropPostal, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGap(49, 49, 49)
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(refNum, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jbtnRegProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(207, 326, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(refNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(PropHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PropLocal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(PropPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(PropType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(rooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(PropStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jbtnRegProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        sp.setViewportView(jPanel2);

        javax.swing.GroupLayout propertyLayout = new javax.swing.GroupLayout(property);
        property.setLayout(propertyLayout);
        propertyLayout.setHorizontalGroup(
            propertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sp)
        );
        propertyLayout.setVerticalGroup(
            propertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, propertyLayout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );

        jTabbedPane2.addTab("tab2", property);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(17, 153, 142));
        jLabel3.setText("CLIENT NAME");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Firstname");

        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Lastname");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(17, 153, 142));
        jLabel6.setText("CLIENTS ADDRESS");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("House number");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Locality");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Postal Address");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(17, 153, 142));
        jLabel16.setText("CLIENT STATUS");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Status");

        clientStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vendor", "Purchaser", "Both" }));
        clientStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientStatusActionPerformed(evt);
            }
        });

        jbtnRegClient.setBackground(new java.awt.Color(17, 153, 142));
        jbtnRegClient.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbtnRegClient.setForeground(new java.awt.Color(255, 255, 255));
        jbtnRegClient.setText("Register");
        jbtnRegClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRegClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel16)
                                .addComponent(jLabel6)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(49, 49, 49)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel17)
                                            .addGap(18, 18, 18)
                                            .addComponent(fname))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel22)
                                            .addGap(18, 18, 18)
                                            .addComponent(clientStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(18, 18, 18)
                                                .addComponent(clientHouseNo))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addGap(18, 18, 18)
                                                .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel21)
                                                    .addComponent(jLabel20))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(clientLocality, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(clientPostal, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jbtnRegClient, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(328, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(clientHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(clientLocality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(clientPostal))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(clientStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtnRegClient, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout clientLayout = new javax.swing.GroupLayout(client);
        client.setLayout(clientLayout);
        clientLayout.setHorizontalGroup(
            clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, clientLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        clientLayout.setVerticalGroup(
            clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab1", client);

        add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, -39, 950, 740));
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTabbedPane2.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane2.setSelectedIndex(1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbtnRegPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRegPropertyActionPerformed
         // ADDS PROPERTY DATA INTO DB
         try {
            // sets up mysql Driver
            Class.forName(driver);
            // connects to DB
            sqlConn = DriverManager.getConnection(databaseCon,username, null);
            // inserts property data into DB
            pst = sqlConn.prepareStatement("INSERT INTO Property(property_address,refNum,rooms,type,property_status) VALUE(?,?,?,?,?)");
            
            // Concatenate Property address
            String property_address = PropHouseNo.getText() + ", " + PropLocal.getText() + ", " + PropPostal.getText();
            
            pst.setString(1, property_address); // grabes address from textfield
            //checks if property address does not exist or not------------------------------
            stmt = sqlConn.createStatement();
            String SQL2 = "SELECT property_address FROM Property WHERE property_address = '" + property_address + "'";
            rs = stmt.executeQuery(SQL2);
            if(rs.next()){
                JOptionPane.showMessageDialog(this, "Cannot Register Property, Property has already been registered");
            }
            //------------------------------------------------------------------------------
            
            pst.setString(2, refNum.getText()); // grabes reference number from textfield
            //checks if client reference number does not exist or not------------------------------
            String SQL = "SELECT refNum FROM Client WHERE refNum = '" + refNum.getText() + "'";
            rs = stmt.executeQuery(SQL);
            if(!rs.next()){
                JOptionPane.showMessageDialog(this, "Client does not exits, please register Client");
            }
            // ------------------------------------------------------------------------------------
            
            String house_rooms = rooms.getValue().toString(); // converts room number to strinf
            pst.setString(3, house_rooms); // grabes room number from textfield
            String house_type = PropType.getSelectedItem().toString(); // converts house type to string
            pst.setString(4, house_type); // grabes house type from textfield
            String house_status = PropStatus.getSelectedItem().toString(); // converts house status to string
            pst.setString(5, house_status); // grabes house status from textfield
            
            // validations before SQL Code execution
            if(refNum.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please Enter the clients Reference Number");
            }
            else if(PropHouseNo.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please fill in your address");
            }
            else if(PropLocal.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please fill in your address");
            }
            else if(PropPostal.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please fill in your address");
            }
            else{
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Property has been Registered");
            }
            
        }
        
        catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(Form_3.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
    }//GEN-LAST:event_jbtnRegPropertyActionPerformed

    private void refNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refNumActionPerformed

    private void PropHouseNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropHouseNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropHouseNoActionPerformed

    private void PropLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropLocalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropLocalActionPerformed

    private void PropPostalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropPostalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropPostalActionPerformed

    private void jbtnRegClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRegClientActionPerformed
        // ADD CLIENT DATA TO DB
        try {
            // connects to driver
            Class.forName(driver);
            // connects to DB
            sqlConn = DriverManager.getConnection(databaseCon,username, null);
            // inserts client data to DB
            pst = sqlConn.prepareStatement("INSERT INTO Client(first_Name,last_Name,client_address,client_status) VALUES(?,?,?,?)");
            
            // Concatenate Client address
            String address = clientHouseNo.getText() + ", " + clientLocality.getText() + ", " + clientPostal.getText();
            
            pst.setString(1, fname.getText()); // grabes firstname
            pst.setString(2, lname.getText()); // grabes lastname
            pst.setString(3, address); // grabes concatenated address
            // checks to see if proprty address is not listed to be sold ---------------------------
            stmt = sqlConn.createStatement();
            String SQL = "SELECT Property.property_address FROM Property INNER JOIN Client ON Client.refNum = Property.refNum WHERE property_address = '" + address + "'";
            rs = stmt.executeQuery(SQL);
            //---------------------------------------------------------------------------------------
            
            String status = clientStatus.getSelectedItem().toString(); // grabes clients status
            pst.setString(4, status);
            
            // Validations before SQL Code execution
            
            if(fname.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please Enter your firstname");
            }
            else if(lname.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please Enter your lastname");
            }
            else if(clientHouseNo.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please fill in your address");
            }
            else if(clientLocality.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please fill in your address");
            }
            else if(clientPostal.getText().isEmpty() == true){
                JOptionPane.showMessageDialog(this, "Please fill in your address");
            }
            else if(rs.next()){
               JOptionPane.showMessageDialog(this, "Cannot Register Client, Property is already listed to be sold, please enter different address");
            } 
            else{
                pst.executeUpdate(); // executes SQL code
                JOptionPane.showMessageDialog(this, fname.getText() + " " + lname.getText() + " Record was added"); // writes message if execution success
                upDateDB();// updates client table
            }
            
        }
        
        catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(Form_3.class.getName()).log(java.util.logging.Level.SEVERE,null,ex);
        }
        
    }//GEN-LAST:event_jbtnRegClientActionPerformed

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameActionPerformed

    private void clientStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientStatusActionPerformed

    }//GEN-LAST:event_clientStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PropHouseNo;
    private javax.swing.JTextField PropLocal;
    private javax.swing.JTextField PropPostal;
    private javax.swing.JComboBox<String> PropStatus;
    private javax.swing.JComboBox<String> PropType;
    private javax.swing.JPanel client;
    private javax.swing.JTextField clientHouseNo;
    private javax.swing.JTextField clientLocality;
    private javax.swing.JTextField clientPostal;
    private javax.swing.JComboBox<String> clientStatus;
    private javax.swing.JTextField fname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton jbtnRegClient;
    private javax.swing.JButton jbtnRegProperty;
    private javax.swing.JTextField lname;
    private javax.swing.JPanel property;
    private javax.swing.JTextField refNum;
    private javax.swing.JSpinner rooms;
    private javax.swing.JScrollPane sp;
    // End of variables declaration//GEN-END:variables
}
